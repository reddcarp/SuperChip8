#ifndef SUPERCHIP8_EMULATOR_FONTSET_HPP
#define SUPERCHIP8_EMULATOR_FONTSET_HPP

#include <array>
#include <cstdint>

namespace SuperChip8::Emulator {

// number of characters in the fontset
constexpr uint8_t CHARACTERS = 16;

constexpr uint8_t FONT_HEIGHT_LOW_RES = 5;
constexpr std::uint16_t FONT_SIZE_LOW_RES = CHARACTERS * FONT_HEIGHT_LOW_RES;

/** Low resolution fontset (8x5 pixels)
 *
 * +-------+----------+------+  +-------+----------+------+
 * |  "0"  |  Binary  | Hex  |  |  "1"  |  Binary  | Hex  |
 * +-------+----------+------+  +-------+----------+------+
 * | ##### | 11110000 | 0xF0 |  |   #   | 00100000 | 0x20 |
 * | #   # | 10010000 | 0x90 |  |  ##   | 01100000 | 0x60 |
 * | #   # | 10010000 | 0x90 |  |   #   | 00100000 | 0x20 |
 * | #   # | 10010000 | 0x90 |  |   #   | 00100000 | 0x20 |
 * | ##### | 11110000 | 0xF0 |  |  ###  | 01110000 | 0x70 |
 * +-------+----------+------+  +-------+----------+------+
 */
constexpr std::array<uint8_t, FONT_SIZE_LOW_RES> FONTSET_LOW_RES = {
    0xF0, 0x90, 0x90, 0x90, 0xF0,  // 0
    0x20, 0x60, 0x20, 0x20, 0x70,  // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0,  // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0,  // 3
    0x90, 0x90, 0xF0, 0x10, 0x10,  // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0,  // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0,  // 6
    0xF0, 0x10, 0x20, 0x40, 0x40,  // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0,  // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0,  // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90,  // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0,  // B
    0xF0, 0x80, 0x80, 0x80, 0xF0,  // C
    0xE0, 0x90, 0x90, 0x90, 0xE0,  // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0,  // E
    0xF0, 0x80, 0xF0, 0x80, 0x80   // F
};

constexpr uint8_t FONT_HEIGHT_HIGH_RES = 10;
constexpr std::uint16_t FONT_SIZE_HIGH_RES = CHARACTERS * FONT_HEIGHT_HIGH_RES;

/** High resolution fontset (8x10 pixels)
 *
 * +----------+----------+------+  +----------+----------+------+
 * |   "0"    |  Binary  | Hex  |  |   "1"    |  Binary  | Hex  |
 * +----------+----------+------+  +----------+----------+------+
 * |  ######  | 01111110 | 0x7E |  |    ##    | 00011000 | 0x18 |
 * | ######## | 11111111 | 0xFF |  |   ###    | 00111000 | 0x38 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ##    ## | 11000011 | 0xC3 |  |    ##    | 00011000 | 0x18 |
 * | ######## | 11111111 | 0xFF |  |   ####   | 00111100 | 0x3C |
 * |  ######  | 01111110 | 0x7E |  |   ####   | 00111100 | 0x3C |
 * +----------+----------+------+  +----------+----------+------+
 */
constexpr std::array<uint8_t, FONT_SIZE_HIGH_RES> FONTSET_HIGH_RES = {
    0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7E,  // "0"
    0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x3C,  // "1"
    0x7E, 0xFF, 0x03, 0x03, 0x7E, 0x7E, 0xC0, 0xC0, 0xFF, 0xFF,  // "2"
    0x7E, 0xFF, 0x03, 0x03, 0x3E, 0x3E, 0x03, 0x03, 0xFF, 0x7E,  // "3"
    0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03,  // "4"
    0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0x7E,  // "5"
    0x7E, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0x7E,  // "6"
    0xFF, 0xFF, 0x03, 0x03, 0x06, 0x06, 0x0C, 0x0C, 0x0C, 0x0C,  // "7"
    0x7E, 0xFF, 0xC3, 0xC3, 0x7E, 0x7E, 0xC3, 0xC3, 0xFF, 0x7E,  // "8"
    0x7E, 0xFF, 0xC3, 0xC3, 0x7F, 0x7F, 0x03, 0x03, 0xFF, 0x7E,  // "9"
    0x7E, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3,  // "A"
    0xFC, 0xFE, 0xC3, 0xC3, 0xFE, 0xFE, 0xC3, 0xC3, 0xFE, 0xFC,  // "B"
    0x7E, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0x7E,  // "C"
    0xFC, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE, 0xFC,  // "D"
    0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF,  // "E"
    0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0   // "F"
};

}  // namespace SuperChip8::Emulator

#endif  // SUPERCHIP8_EMULATOR_FONTSET_HPP